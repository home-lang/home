name: Releaser

on:
  push:
    tags:
      - 'v*'

jobs:
  build-ion-binaries:
    name: Build Ion Compiler Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-linux
            artifact-name: ion-linux-x64
          - os: ubuntu-latest
            target: aarch64-linux
            artifact-name: ion-linux-arm64
          - os: macos-latest
            target: x86_64-macos
            artifact-name: ion-darwin-x64
          - os: macos-latest
            target: aarch64-macos
            artifact-name: ion-darwin-arm64
          - os: windows-latest
            target: x86_64-windows
            artifact-name: ion-windows-x64

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: '0.15.1'

      - name: Build Ion Compiler
        run: zig build -Doptimize=ReleaseFast

      - name: Run Tests
        run: zig build test --summary all

      - name: Package Binary
        run: |
          mkdir -p release
          cp zig-out/bin/ion* release/ || true
          cd release && zip -r ../${{ matrix.artifact-name }}.zip . && cd ..

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.artifact-name }}.zip

  npm:
    name: npm
    runs-on: ubuntu-latest
    needs: [build-ion-binaries]

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        # env:
        #   BUN_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        with:
          bun-version: latest

      - name: Use cached node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            node-modules-

      - name: Install Dependencies
        run: bun install

      - name: Publish to npm
        run: ./scripts/publish.sh
        env:
          BUN_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: Download Ion Binaries
        uses: actions/download-artifact@v4
        with:
          path: ion-binaries

      - name: Create GitHub Release
        uses: stacksjs/action-releaser@v1.2.6
        with:
          files: |
            ion-binaries/ion-linux-x64/ion-linux-x64.zip
            ion-binaries/ion-linux-arm64/ion-linux-arm64.zip
            ion-binaries/ion-windows-x64/ion-windows-x64.zip
            ion-binaries/ion-darwin-x64/ion-darwin-x64.zip
            ion-binaries/ion-darwin-arm64/ion-darwin-arm64.zip
            packages/stx/bin/stx-linux-x64.zip
            packages/stx/bin/stx-linux-arm64.zip
            packages/stx/bin/stx-windows-x64.zip
            packages/stx/bin/stx-darwin-x64.zip
            packages/stx/bin/stx-darwin-arm64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
