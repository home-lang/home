name: CI

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Install Bun
        uses: oven-sh/setup-bun@v2

      - name: Use cached node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            node-modules-

      - name: Install Dependencies
        run: bun install

      - name: Lint
        run: bun run lint

  typecheck:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Install Bun
        uses: oven-sh/setup-bun@v2

      - name: Use cached node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            node-modules-

      - name: Install Dependencies
        run: bun install

      - name: Typecheck
        run: bun --bun run typecheck

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Install Bun
        uses: oven-sh/setup-bun@v2

      - name: Use cached node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            node-modules-

      - name: Install Dependencies
        run: bun install

      - name: Unit Test
        run: bun test

  build-and-test-home:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
            platform: linux
          - os: ubuntu-latest
            arch: aarch64
            platform: linux
          - os: macos-latest
            arch: x86_64
            platform: macos
          - os: macos-latest
            arch: aarch64
            platform: macos
          - os: windows-latest
            arch: x86_64
            platform: windows

    steps:
      - uses: actions/checkout@v5

      - name: Setup Home
        uses: ./packages/action
        with:
          home-version: 'latest'
          cache: 'true'

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: '0.15.1'

      - name: Verify Zig Installation
        run: zig version

      - name: Build Home Compiler (Native)
        if: matrix.arch == 'x86_64' || (matrix.os == 'macos-latest' && matrix.arch == 'aarch64')
        run: zig build

      - name: Build Home Compiler (Cross-compile)
        if: matrix.arch == 'aarch64' && matrix.os != 'macos-latest'
        run: zig build -Dtarget=${{ matrix.arch }}-${{ matrix.platform }}

      - name: Run Zig Unit Tests (Native only)
        if: matrix.arch == 'x86_64' || (matrix.os == 'macos-latest' && matrix.arch == 'aarch64')
        run: zig build test --summary all

      - name: Run Integration Tests (Unix)
        if: (matrix.arch == 'x86_64' || (matrix.os == 'macos-latest' && matrix.arch == 'aarch64')) && matrix.platform != 'windows'
        run: |
          chmod +x tests/integration/test_runner.sh
          ./tests/integration/test_runner.sh

      - name: Run Integration Tests (Windows)
        if: matrix.platform == 'windows' && matrix.arch == 'x86_64'
        shell: bash
        run: |
          chmod +x tests/integration/test_runner.sh
          ./tests/integration/test_runner.sh

      - name: Test Native Codegen (Unix)
        if: (matrix.arch == 'x86_64' || (matrix.os == 'macos-latest' && matrix.arch == 'aarch64')) && matrix.platform != 'windows'
        run: |
          ./zig-out/bin/home parse tests/integration/11_ternary_advanced.ion
          ./zig-out/bin/home parse tests/integration/17_switch_advanced.ion
          ./zig-out/bin/home parse tests/integration/20_combined_features.ion

      - name: Test Native Codegen (Windows)
        if: matrix.platform == 'windows' && matrix.arch == 'x86_64'
        shell: bash
        run: |
          ./zig-out/bin/home.exe parse tests/integration/11_ternary_advanced.ion
          ./zig-out/bin/home.exe parse tests/integration/17_switch_advanced.ion
          ./zig-out/bin/home.exe parse tests/integration/20_combined_features.ion

      - name: Upload Home Binary (Unix)
        if: matrix.platform != 'windows'
        uses: actions/upload-artifact@v4
        with:
          name: home-${{ matrix.platform }}-${{ matrix.arch }}
          path: zig-out/bin/home
          retention-days: 7

      - name: Upload Home Binary (Windows)
        if: matrix.platform == 'windows'
        uses: actions/upload-artifact@v4
        with:
          name: home-${{ matrix.platform }}-${{ matrix.arch }}
          path: zig-out/bin/home.exe
          retention-days: 7

  # =========================================================================
  # Kernel Tests
  # =========================================================================
  test-kernel:
    name: Kernel Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: '0.15.1'

      - name: Run kernel memory tests
        run: |
          cd packages/kernel/tests
          zig build-exe test_memory.zig --main-pkg-path ../..
          ./test_memory

      - name: Run kernel paging tests
        run: |
          cd packages/kernel/tests
          zig build-exe test_paging.zig --main-pkg-path ../..
          ./test_paging

      - name: Run scheduler tests
        run: |
          cd packages/kernel/tests
          zig build-exe test_scheduler.zig --main-pkg-path ../..
          ./test_scheduler

      - name: Run integration tests
        run: |
          cd packages/kernel/tests
          zig build-exe test_integration.zig --main-pkg-path ../..
          ./test_integration

  test-filesystem:
    name: Filesystem Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: '0.15.1'

      - name: Run filesystem tests
        run: |
          cd packages/fs/tests
          zig build-exe test_filesystems.zig --main-pkg-path ../..
          ./test_filesystems

  test-network:
    name: Network Stack Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: '0.15.1'

      - name: Run network stack tests
        run: |
          cd packages/net/tests
          zig build-exe test_network.zig --main-pkg-path ../..
          ./test_network
